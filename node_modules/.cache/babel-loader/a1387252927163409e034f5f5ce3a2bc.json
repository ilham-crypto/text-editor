{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilhamsans\\\\Documents\\\\Clone\\\\React-Rich-Text-Editor\\\\src\\\\components\\\\Editpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { EditorState, convertToRaw, ContentState, convertFromHTML } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editpost(props) {\n  _s();\n\n  let history = useNavigate();\n  const [userInfo, setuserInfo] = useState({\n    title: props.postList[0].title\n  });\n\n  const onChangeValue = e => {\n    setuserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let editorState = EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML(props.postList[0].description)));\n  const [description, setDescription] = useState(editorState);\n\n  const onEditorStateChange = editorState => {\n    setDescription(editorState);\n  };\n\n  const [isError, setError] = useState(null);\n\n  const PoemAddbooks = async event => {\n    try {\n      event.preventDefault();\n      event.persist();\n\n      if (userInfo.description.value.length < 50) {\n        setError(\"Required, Add description minimum length 50 characters\");\n        return;\n      }\n\n      axios.post(`http://localhost:8080/editArticle`, {\n        title: userInfo.title,\n        description: userInfo.description.value,\n        ids: props.editPostID\n      }).then(res => {\n        // then print response status\n        if (res.data.success === true) {\n          history.push(\"/\");\n        }\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: PoemAddbooks,\n          className: \"update__forms\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"myaccount-content\",\n            children: \" Edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-weight-bold\",\n                children: [\" \", \"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \" * \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                value: userInfo.title,\n                onChange: onChangeValue,\n                className: \"form-control\",\n                placeholder: \"Title\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-12 editor\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-weight-bold\",\n                children: [\" \", \"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \" * \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 31\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Editor, {\n                editorState: description,\n                toolbarClassName: \"toolbarClassName\",\n                wrapperClassName: \"wrapperClassName\",\n                editorClassName: \"editorClassName\",\n                onEditorStateChange: onEditorStateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                style: {\n                  display: \"none\"\n                },\n                disabled: true,\n                ref: val => userInfo.description = val,\n                value: draftToHtml(convertToRaw(description.getCurrentContent()))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), isError !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"errors\",\n              children: [\" \", isError, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-sm-12 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn__theme\",\n                children: [\" \", \"Submit\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editpost, \"tHK3KlTqmufXdpKYLxi6fuCRca8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Editpost;\nexport default Editpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editpost\");","map":{"version":3,"sources":["C:/Users/ilhamsans/Documents/Clone/React-Rich-Text-Editor/src/components/Editpost.js"],"names":["React","useState","EditorState","convertToRaw","ContentState","convertFromHTML","Editor","draftToHtml","useNavigate","axios","Editpost","props","history","userInfo","setuserInfo","title","postList","onChangeValue","e","target","name","value","editorState","createWithContent","createFromBlockArray","description","setDescription","onEditorStateChange","isError","setError","PoemAddbooks","event","preventDefault","persist","length","post","ids","editPostID","then","res","data","success","push","error","display","val","getCurrentContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  EditorState,\r\n  convertToRaw,\r\n  ContentState,\r\n  convertFromHTML,\r\n} from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction Editpost(props) {\r\n  let history = useNavigate();\r\n  const [userInfo, setuserInfo] = useState({\r\n    title: props.postList[0].title,\r\n  });\r\n  const onChangeValue = (e) => {\r\n    setuserInfo({\r\n      ...userInfo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  let editorState = EditorState.createWithContent(\r\n    ContentState.createFromBlockArray(\r\n      convertFromHTML(props.postList[0].description)\r\n    )\r\n  );\r\n  const [description, setDescription] = useState(editorState);\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    setDescription(editorState);\r\n  };\r\n\r\n  const [isError, setError] = useState(null);\r\n  const PoemAddbooks = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      event.persist();\r\n      if (userInfo.description.value.length < 50) {\r\n        setError(\"Required, Add description minimum length 50 characters\");\r\n        return;\r\n      }\r\n      axios\r\n        .post(`http://localhost:8080/editArticle`, {\r\n          title: userInfo.title,\r\n          description: userInfo.description.value,\r\n          ids: props.editPostID,\r\n        })\r\n        .then((res) => {\r\n          // then print response status\r\n          if (res.data.success === true) {\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <form onSubmit={PoemAddbooks} className=\"update__forms\">\r\n            <h3 className=\"myaccount-content\"> Edit </h3>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-12\">\r\n                <label className=\"font-weight-bold\">\r\n                  {\" \"}\r\n                  Title <span className=\"required\"> * </span>{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={userInfo.title}\r\n                  onChange={onChangeValue}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Title\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-12 editor\">\r\n                <label className=\"font-weight-bold\">\r\n                  {\" \"}\r\n                  Description <span className=\"required\"> * </span>{\" \"}\r\n                </label>\r\n                <Editor\r\n                  editorState={description}\r\n                  toolbarClassName=\"toolbarClassName\"\r\n                  wrapperClassName=\"wrapperClassName\"\r\n                  editorClassName=\"editorClassName\"\r\n                  onEditorStateChange={onEditorStateChange}\r\n                />\r\n                <textarea\r\n                  style={{ display: \"none\" }}\r\n                  disabled\r\n                  ref={(val) => (userInfo.description = val)}\r\n                  value={draftToHtml(\r\n                    convertToRaw(description.getCurrentContent())\r\n                  )}\r\n                />\r\n              </div>\r\n              {isError !== null && <div className=\"errors\"> {isError} </div>}\r\n              <div className=\"form-group col-sm-12 text-right\">\r\n                <button type=\"submit\" className=\"btn btn__theme\">\r\n                  {\" \"}\r\n                  Submit{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Editpost;\r\n"]},"metadata":{},"sourceType":"module"}